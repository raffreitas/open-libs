name: OpenLibs.Extensions - Release and Publish

on:
  push:
    branches: [ main ]
    paths:
      - 'src/OpenLibs.Extensions/**'
      - 'tests/OpenLibs.Extensions.Tests/**'
      - '.github/workflows/release.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/OpenLibs.Extensions/**'
      - 'tests/OpenLibs.Extensions.Tests/**'

env:
  DOTNET_VERSION: '9.0.x'
  PROJECT_NAME: 'OpenLibs.Extensions'

jobs:
  calculate-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semver.outputs.version }}
      should-release: ${{ steps.semver.outputs.should-release }}
      changelog: ${{ steps.semver.outputs.changelog }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Calculate Semantic Version
      id: semver
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        dry_run: true
        default_bump: patch
        custom_release_rules: |
          feat:minor:‚ú® Features
          fix:patch:üêõ Bug Fixes  
          docs:patch:üìö Documentation
          style:patch:üíé Styles
          refactor:patch:üì¶ Code Refactoring
          perf:patch:üöÄ Performance Improvements
          test:patch:üö® Tests
          build:patch:üõ† Builds
          ci:patch:‚öôÔ∏è Continuous Integrations
          chore:patch:‚ôªÔ∏è Chores
          revert:patch:üóë Reverts
          BREAKING CHANGE:major:üí• Breaking Changes
        tag_prefix: "extensions-v"

  build-and-test:
    runs-on: ubuntu-latest
    needs: calculate-version
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release src/${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj -p:Version=${{ needs.calculate-version.outputs.version }}
    
    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage" tests/${{ env.PROJECT_NAME }}.Tests/${{ env.PROJECT_NAME }}.Tests.csproj
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: raffreitas/open-libs

  pack-and-publish:
    runs-on: ubuntu-latest
    needs: [calculate-version, build-and-test]
    if: github.ref == 'refs/heads/main' && needs.calculate-version.outputs.should-release == 'true'
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release src/${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj -p:Version=${{ needs.calculate-version.outputs.version }}
    
    - name: Pack
      run: dotnet pack src/${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj --no-build --configuration Release -p:Version=${{ needs.calculate-version.outputs.version }} --output ./packages
    
    - name: Publish to NuGet
      run: dotnet nuget push ./packages/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate

  create-release:
    runs-on: ubuntu-latest
    needs: [calculate-version, pack-and-publish]
    if: github.ref == 'refs/heads/main' && needs.calculate-version.outputs.should-release == 'true'
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Create Git Tag and Release
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        custom_tag: ${{ needs.calculate-version.outputs.version }}
        tag_prefix: "v"
        create_annotated_tag: true
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: extensions-v${{ needs.calculate-version.outputs.version }}
        release_name: OpenLibs.Extensions v${{ needs.calculate-version.outputs.version }}
        body: |
          ## Changes in this Release
          ${{ needs.calculate-version.outputs.changelog }}
          
          ## Package Published
          - OpenLibs.Extensions v${{ needs.calculate-version.outputs.version }}
        draft: false
        prerelease: false
